// Generated by CoffeeScript 1.4.0
(function() {

  $().ready(function() {
    module("Helyek keresése callback-kel");
    asyncTest("the proper url is called", function() {
      var handler, locationStr;
      locationStr = "Budap";
      handler = $.mockjax({
        url: /^http:\/\/autocomplete\.wunderground\.com\/aq$/,
        data: {
          query: locationStr,
          format: "json"
        },
        urlParams: ['location'],
        status: 200,
        contentType: 'text/json',
        response: function(settings) {
          ok(true, "The mock was called");
          this.responseText = {
            'ok': 'ok'
          };
          this.response = null;
          start();
        }
      });
      Weather.getLocation(locationStr, function(data) {
        return console.log(data);
      });
      return $.mockjaxClear(handler);
    });
    asyncTest("the callback is called", function() {
      var handler, locationStr;
      expect(1);
      locationStr = "Pecs";
      handler = $.mockjax({
        url: /^http:\/\/autocomplete\.wunderground\.com\/aq$/,
        data: {
          query: locationStr,
          format: "json"
        },
        urlParams: ['location'],
        status: 200,
        contentType: 'text/json',
        responseText: {
          "RESULTS": [
            {
              "name": "Pecs, Hungary",
              "type": "city",
              "c": "HU",
              "zmw": "00000.1.12942",
              "tz": "Europe/Budapest",
              "tzs": "CET",
              "l": "/q/zmw:00000.1.12942"
            }, {
              "name": "Pecsvarad, Hungary",
              "type": "city",
              "c": "HU",
              "zmw": "00000.11.12942",
              "tz": "Europe/Budapest",
              "tzs": "CET",
              "l": "/q/zmw:00000.11.12942"
            }
          ]
        }
      });
      Weather.getLocation(locationStr, function(data) {
        equal(data.RESULTS[0].name, "Pecs, Hungary");
        start();
      });
      return $.mockjaxClear(handler);
    });
    module("Időjárás lekérése adott helyhez");
    asyncTest("The callback is called", function() {
      $.mockjax({
        url: /^http:\/\/api\.wunderground\.com\/api\/[a-zA-Z0-9]+\/forecast\/lang:HU\/q\/.*\.json$/,
        responseText: {
          "response": {
            "version": "0.1",
            "termsofService": "http://www.wunderground.com/weather/api/d/terms.html",
            "features": {
              "forecast": 1
            }
          },
          "forecast": {
            "txt_forecast": {
              "date": "1:00 AM CET",
              "forecastday": []
            },
            "simpleforecast": {
              "forecastday": []
            }
          }
        }
      });
      return Weather.getWeather('zmw:00000.1.12942', function(data) {
        ok(data.response, "a response kulcs létezik");
        ok(data.forecast, "a forecast kulcs létezik");
        return start();
      });
    });
  });

}).call(this);
